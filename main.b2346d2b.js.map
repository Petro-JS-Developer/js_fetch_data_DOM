{"version":3,"sources":["scripts/main.js"],"names":["BASE_URL","request","url","fetch","then","response","json","getPhones","Promise","resolve","reject","setTimeout","getPhonesDetails","ids","result","console","log","error","id","phoneWithDetails","resultList","all","map","phone","details","Object","assign"],"mappings":";AACA,aAEA,IAAMA,EAAW,4DAEXC,EAAU,SAACC,GAERC,OAAAA,MAASH,GAAAA,OAAAA,GAAWE,OAAAA,IACxBE,KAAK,SAAAC,GACGA,OAAAA,EAASC,UAItB,SAASC,IASA,OAAA,IAAIC,QARM,SAACC,EAASC,GACzBD,EAAQR,EAAD,iBAEPU,WAAW,WACTD,EAAO,UACN,OAYP,SAASE,EAAiBC,GASjB,OAAA,IAAIL,QARM,SAACC,EAASC,GACzBD,EAAQR,EAAmBY,WAAAA,OAAAA,EAApB,WAEPF,WAAW,WACTD,EAAO,UACN,OAZPH,IACGH,KACC,SAAAU,GAAUC,OAAAA,QAAQC,IAAIF,IACtB,SAAAG,GAASF,OAAAA,QAAQC,IAAIC,KAezBL,EAAiB,qBACdR,KACC,SAAAU,GAAUC,OAAAA,QAAQC,IAAOF,GAAAA,OAAAA,EAAOI,IAAMJ,IACtC,SAAAG,GAASF,OAAAA,QAAQC,IAAIC,KAGzB,IAAME,EAAmBZ,IAEzBY,EACGf,KACC,SAAAgB,GAAcZ,OAAAA,QAAQa,IACpBD,EAAWE,IAAI,SAAAC,GACNX,OAAAA,EAAiBW,EAAML,IAC3Bd,KAAK,SAAAoB,GAAWC,OAAAA,OAAOC,OAAOH,EAAOC,UAI7CpB,KAAK,SAAAU,GAAUC,OAAAA,QAAQC,IAAIF","file":"main.b2346d2b.js","sourceRoot":"..\\src","sourcesContent":["/* eslint-disable no-console */\n'use strict';\n\nconst BASE_URL = 'https://mate-academy.github.io/phone-catalogue-static/api';\n\nconst request = (url) => {\n  // eslint-disable-next-line no-undef\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => {\n      return response.json();\n    });\n};\n\nfunction getPhones() {\n  const resolver = (resolve, reject) => {\n    resolve(request(`/phones.json`));\n\n    setTimeout(() => {\n      reject('Error');\n    }, 5000);\n  };\n\n  return new Promise(resolver);\n};\n\ngetPhones()\n  .then(\n    result => console.log(result),\n    error => console.log(error)\n  );\n\nfunction getPhonesDetails(ids) {\n  const resolver = (resolve, reject) => {\n    resolve(request(`/phones/${ids}.json`));\n\n    setTimeout(() => {\n      reject('Error');\n    }, 5000);\n  };\n\n  return new Promise(resolver);\n};\n\ngetPhonesDetails('samsung-transform')\n  .then(\n    result => console.log(`${result.id}`, result),\n    error => console.log(error)\n  );\n\nconst phoneWithDetails = getPhones();\n\nphoneWithDetails\n  .then(\n    resultList => Promise.all(\n      resultList.map(phone => {\n        return getPhonesDetails(phone.id)\n          .then(details => Object.assign(phone, details));\n      })\n    )\n  )\n  .then(result => console.log(result));\n"]}